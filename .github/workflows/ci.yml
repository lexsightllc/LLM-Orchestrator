name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-commits:
    name: Conventional Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v5
        with:
          configFile: commitlint.config.cjs
      - name: Apply Conventional Commit labels
        if: github.event_name == 'pull_request'
        uses: bcoe/conventional-release-labels@v1

  build-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    needs: lint-commits
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
      - name: Run checks
        run: make check
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml
      - name: Generate SBOM
        run: ./scripts/sbom
      - name: Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: sbom-${{ matrix.os }}-${{ matrix.python-version }}
          path: sbom/sbom.json

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt -r requirements-dev.txt
      - run: ./scripts/security-scan
      - uses: actions/upload-artifact@v3
        with:
          name: detect-secrets-report
          path: ci/detect-secrets-report.json
